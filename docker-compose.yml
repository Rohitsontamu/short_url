version: '3.8'

services:
  # Short URL Web Application
  short-url-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: short-url-app
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=production
      - DEBUG=false
      - HOST=0.0.0.0
      - PORT=5000
      - DATABASE_PATH=/app/data/urls.db
    volumes:
      # Persist database and logs
      - ./data:/app/data
      - ./logs:/app/logs
    networks:
      - short-url-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    depends_on:
      - redis
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.short-url.rule=Host(`localhost`)"
      - "traefik.http.services.short-url.loadbalancer.server.port=5000"

  # Redis for caching and session storage (optional enhancement)
  redis:
    image: redis:7-alpine
    container_name: short-url-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - short-url-network
    restart: unless-stopped
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 5s
      retries: 3

  # Nginx reverse proxy (optional)
  nginx:
    image: nginx:alpine
    container_name: short-url-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    networks:
      - short-url-network
    depends_on:
      - short-url-app
    restart: unless-stopped
    profiles:
      - production

volumes:
  redis-data:
    driver: local

networks:
  short-url-network:
    driver: bridge